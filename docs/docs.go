// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/protected/authentication": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Read personal information of  user who owns the authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication related"
                ],
                "summary": "Read personal information of  user who owns the authentication token",
                "responses": {
                    "200": {
                        "description": "Empty response indicating successful authentication"
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header"
                    }
                }
            }
        },
        "/v1/protected/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Read personal information of  user who owns the authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication related"
                ],
                "summary": "Read personal information of  user who owns the authentication token",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/logic.UserDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header"
                    }
                }
            }
        },
        "/v1/protected/projects": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information about projects I am a member of",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get information about projects I am a member of",
                "responses": {
                    "200": {
                        "description": "Response with projects information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.ProjectDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Project create request payload",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.CreateModifyProjectApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New project has been created",
                        "schema": {
                            "$ref": "#/definitions/logic.ProjectDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Project with this name already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/protected/projects/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information about a single project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get information about a single project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response with project information",
                        "schema": {
                            "$ref": "#/definitions/logic.ProjectDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/protected/projects/{id}/apps": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all applications in a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get all applications in a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of apps",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.AppDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new application in project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Create a new application in project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "App create request payload",
                        "name": "app",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.CreateAppApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "App created",
                        "schema": {
                            "$ref": "#/definitions/logic.AppDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "App with this name already exists in this project",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/protected/projects/{id}/imports": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Import project architecture including servers, resources, schemas, messages, and apps from YAML",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Import a project architecture",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "YAML content to import",
                        "name": "import",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.ImportFileInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Import validation errors",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/protected/projects/{id}/imports/validator": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Validate YAML file structure for project import",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Validate architecture file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "YAML content to validate",
                        "name": "import",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.ImportFileInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File is valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Validation errors",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/protected/projects/{id}/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of messages in a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Get messages in project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages in project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.MessageDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new message in a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Create message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message creation payload",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.CreateMessageApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created message",
                        "schema": {
                            "$ref": "#/definitions/logic.MessageDBSerializerStruct"
                        }
                    },
                    "400": {
                        "description": "Schema does not belong to this project or schema version does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project or schema not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Message with this name already exists in this project",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/protected/projects/{id}/schemas": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all schemas in project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schemas"
                ],
                "summary": "Get all schemas in project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of schemas in project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.SchemaDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new schema in project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schemas"
                ],
                "summary": "Create new schema in project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New schema request payload",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.CreateSchemaApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nodified schema",
                        "schema": {
                            "$ref": "#/definitions/logic.SchemaDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/protected/projects/{id}/servers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all servers in a project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Servers"
                ],
                "summary": "Get all servers in a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of servers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.ServerDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new server in project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Servers"
                ],
                "summary": "Create a new server in project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Server create request payload",
                        "name": "server",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.CreateServerApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Server created",
                        "schema": {
                            "$ref": "#/definitions/logic.ServerDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Server with this name already exists in this project",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/protected/schemas/{schemaID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get schema",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schemas"
                ],
                "summary": "Get schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema ID",
                        "name": "schemaID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schema information",
                        "schema": {
                            "$ref": "#/definitions/logic.SchemaDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Schema not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Modify schema by creating a new version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schemas"
                ],
                "summary": "Modify schema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema ID",
                        "name": "schemaID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schema modification payload",
                        "name": "schema",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.ModifySchemaApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Modified schema",
                        "schema": {
                            "$ref": "#/definitions/logic.SchemaDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Schema not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/protected/schemas/{schemaID}/versions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of schema versions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schemas"
                ],
                "summary": "Get list of schema versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema ID",
                        "name": "schemaID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of schema versions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.SchemaEditDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Schema not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/protected/schemas/{schemaID}/versions/{versionID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a single schema version",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schemas"
                ],
                "summary": "Get a single schema version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Schema ID",
                        "name": "schemaID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Version ID (integer number)",
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schema version information",
                        "schema": {
                            "$ref": "#/definitions/logic.SchemaEditDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Schema version not found or can't be accessed by user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/protected/servers/{id}/binds": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all resource bindings for resources in a server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server Resources"
                ],
                "summary": "Get all resource bindings in a server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of resource bindings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.ResourceBindingDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Server not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a resource binding between two resources in the same server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server Resources"
                ],
                "summary": "Create a resource binding in server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource binding request payload",
                        "name": "binding",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.CreateResourceBindApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource binding created",
                        "schema": {
                            "$ref": "#/definitions/logic.ResourceBindingDBSerializerStruct"
                        }
                    },
                    "400": {
                        "description": "Invalid input or resources not in same server",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Server or resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Resource binding already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/protected/servers/{id}/resources": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all resources in a server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server Resources"
                ],
                "summary": "Get all resources in a server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of resources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.ResourceDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Server not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new resource in server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Server Resources"
                ],
                "summary": "Create a new resource in server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource create request payload",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.CreateResourceApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource created",
                        "schema": {
                            "$ref": "#/definitions/logic.ResourceDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Server not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Resource with this name already exists in this server",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/public/authentication": {
            "post": {
                "description": "Sign in via login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication related"
                ],
                "summary": "Sign in via login and password",
                "parameters": [
                    {
                        "description": "Sign in request payload",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.SignInSignUpApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully signed in",
                        "schema": {
                            "$ref": "#/definitions/logic.UserDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Invalid login or password"
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/public/users": {
            "post": {
                "description": "Sign up via email and password with optional invitation code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication related"
                ],
                "summary": "Sign up via email and password",
                "parameters": [
                    {
                        "description": "Sign up request payload",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.SignInSignUpApiInputContract"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Optional invitation code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful sign up",
                        "schema": {
                            "$ref": "#/definitions/logic.UserDBSerializerStruct"
                        }
                    },
                    "409": {
                        "description": "User with specified email is already registered in the system"
                    },
                    "422": {
                        "description": "JSON payload validation error",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.APIDataFieldErrorResponseField": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.DataValidationErrorAPIResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.APIDataFieldErrorResponseField"
                    }
                }
            }
        },
        "input_contracts.CreateAppApiInputContract": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 45,
                    "minLength": 1
                }
            }
        },
        "input_contracts.CreateMessageApiInputContract": {
            "type": "object",
            "required": [
                "name",
                "schema_id",
                "schema_version"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 45,
                    "minLength": 1
                },
                "schema_id": {
                    "type": "string"
                },
                "schema_version": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "input_contracts.CreateModifyProjectApiInputContract": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 45,
                    "minLength": 1
                }
            }
        },
        "input_contracts.CreateResourceApiInputContract": {
            "type": "object",
            "required": [
                "mode",
                "name",
                "resource_type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "read",
                        "write",
                        "readwrite"
                    ]
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "resource_type": {
                    "type": "string",
                    "enum": [
                        "topic",
                        "exchange",
                        "queue",
                        "table",
                        "endpoint"
                    ]
                }
            }
        },
        "input_contracts.CreateResourceBindApiInputContract": {
            "type": "object",
            "required": [
                "source_resource_id",
                "target_resource_id"
            ],
            "properties": {
                "source_resource_id": {
                    "type": "string"
                },
                "target_resource_id": {
                    "type": "string"
                }
            }
        },
        "input_contracts.CreateSchemaApiInputContract": {
            "type": "object",
            "required": [
                "name",
                "schema",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 45,
                    "minLength": 1
                },
                "schema": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "jsonschema"
                    ]
                }
            }
        },
        "input_contracts.CreateServerApiInputContract": {
            "type": "object",
            "required": [
                "name",
                "protocol"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 45,
                    "minLength": 1
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "input_contracts.ImportFileInputContract": {
            "type": "object",
            "required": [
                "yaml"
            ],
            "properties": {
                "yaml": {
                    "type": "string"
                }
            }
        },
        "input_contracts.ModifySchemaApiInputContract": {
            "type": "object",
            "required": [
                "schema"
            ],
            "properties": {
                "schema": {
                    "type": "string"
                }
            }
        },
        "input_contracts.SignInSignUpApiInputContract": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "logic.AppDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_user_id": {
                    "type": "string"
                },
                "created_by_user_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "logic.MessageDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "string"
                },
                "created_by_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "schema_id": {
                    "type": "string"
                },
                "schema_version": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "logic.ProjectDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_by_id": {
                    "type": "string"
                },
                "created_by_name": {
                    "type": "string"
                },
                "created_by_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_private": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "logic.ResourceBindingDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "source_resource_id": {
                    "type": "string"
                },
                "target_resource_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "logic.ResourceDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_user_id": {
                    "type": "string"
                },
                "created_by_user_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "server_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "logic.SchemaDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_by_id": {
                    "type": "string"
                },
                "created_by_name": {
                    "type": "string"
                },
                "created_by_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "logic.SchemaEditDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_name": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "schema_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "logic.ServerDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_user_id": {
                    "type": "string"
                },
                "created_by_user_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "logic.UserDBSerializerStruct": {
            "type": "object",
            "properties": {
                "handle": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "FusionCat API",
	Description:      "API Server for FusionCat application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

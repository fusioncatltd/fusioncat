{
    "swagger": "2.0",
    "info": {
        "description": "API Server for FusionCat application",
        "title": "FusionCat API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/v1/protected/authentication": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Read personal information of  user who owns the authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication related"
                ],
                "summary": "Read personal information of  user who owns the authentication token",
                "responses": {
                    "200": {
                        "description": "Empty response indicating successful authentication"
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header"
                    }
                }
            }
        },
        "/v1/protected/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Read personal information of  user who owns the authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication related"
                ],
                "summary": "Read personal information of  user who owns the authentication token",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/logic.UserDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header"
                    }
                }
            }
        },
        "/v1/protected/projects": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information about projects I am a member of",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get information about projects I am a member of",
                "responses": {
                    "200": {
                        "description": "Response with projects information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.ProjectDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Project create request payload",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.CreateModifyProjectApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New project has been created",
                        "schema": {
                            "$ref": "#/definitions/logic.ProjectDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Project with this name already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/protected/projects/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information about a single project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get information about a single project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response with project information",
                        "schema": {
                            "$ref": "#/definitions/logic.ProjectDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/protected/projects/{id}/schemas": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all schemas in project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schemas"
                ],
                "summary": "Get all schemas in project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of schemas in project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logic.SchemaDBSerializerStruct"
                            }
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new schema in project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schemas"
                ],
                "summary": "Create new schema in project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New schema request payload",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.CreateSchemaApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nodified schema",
                        "schema": {
                            "$ref": "#/definitions/logic.SchemaDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Access denied: missing or invalid Authorization header"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/public/authentication": {
            "post": {
                "description": "Sign in via login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication related"
                ],
                "summary": "Sign in via login and password",
                "parameters": [
                    {
                        "description": "Sign in request payload",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.SignInSignUpApiInputContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully signed in",
                        "schema": {
                            "$ref": "#/definitions/logic.UserDBSerializerStruct"
                        }
                    },
                    "401": {
                        "description": "Invalid login or password"
                    },
                    "422": {
                        "description": "JSON payload validation errors",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        },
        "/v1/public/users": {
            "post": {
                "description": "Sign up via email and password with optional invitation code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication related"
                ],
                "summary": "Sign up via email and password",
                "parameters": [
                    {
                        "description": "Sign up request payload",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input_contracts.SignInSignUpApiInputContract"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Optional invitation code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful sign up",
                        "schema": {
                            "$ref": "#/definitions/logic.UserDBSerializerStruct"
                        }
                    },
                    "409": {
                        "description": "User with specified email is already registered in the system"
                    },
                    "422": {
                        "description": "JSON payload validation error",
                        "schema": {
                            "$ref": "#/definitions/api.DataValidationErrorAPIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.APIDataFieldErrorResponseField": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.DataValidationErrorAPIResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.APIDataFieldErrorResponseField"
                    }
                }
            }
        },
        "input_contracts.CreateModifyProjectApiInputContract": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 45,
                    "minLength": 1
                }
            }
        },
        "input_contracts.CreateSchemaApiInputContract": {
            "type": "object",
            "required": [
                "name",
                "schema",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 45,
                    "minLength": 1
                },
                "schema": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "jsonschema"
                    ]
                }
            }
        },
        "input_contracts.SignInSignUpApiInputContract": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "logic.ProjectDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_by_id": {
                    "type": "string"
                },
                "created_by_name": {
                    "type": "string"
                },
                "created_by_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_private": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "logic.SchemaDBSerializerStruct": {
            "type": "object",
            "properties": {
                "created_by_id": {
                    "type": "string"
                },
                "created_by_name": {
                    "type": "string"
                },
                "created_by_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "logic.UserDBSerializerStruct": {
            "type": "object",
            "properties": {
                "handle": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}